import random
import telebot
import json

photo_dict = {
    "https://imgur.com/a/RLzta7G": "–ì—Ä–∞–Ω–¥ –ö–∞–Ω—å–æ–Ω –ê—Ä–∏–∑–æ–Ω–∞ –°–®–ê",
    "https://imgur.com/a/6kZ7Tsn": "–ö–∞–Ω—å–æ–Ω –ê–Ω—Ç–∏–ª–æ–ø—ã –ê—Ä–∏–∑–æ–Ω–∞ –°–®–ê",
    "https://imgur.com/a/T1Y46a6": "–ö–∞–Ω—å–æ–Ω –ü–æ–¥–∫–æ–≤–∞ –ê—Ä–∏–∑–æ–Ω–∞ –°–®–ê",
    "https://imgur.com/a/UkvelEJ": "–î–æ–ª–∏–Ω–∞ –ú–æ–Ω—É–º–µ–Ω—Ç–æ–≤ –ê—Ä–∏–∑–æ–Ω–∞ –Æ—Ç–∞ –°–®–ê",
    "https://imgur.com/a/qhBTKWw": "–ë—Ä–∞–π—Å-–ö–∞–Ω—å–æ–Ω –Æ—Ç–∞ –°–®–ê",
    "https://imgur.com/a/o9N5Z8L": "–î—ã—Ä–∞ –°–ª–∞–≤—ã –û–∑–µ—Ä–æ –ë–µ—Ä—Ä–∏–µ—Å—Å–∞ –°–®–ê",
    "https://imgur.com/a/ujX1Sjm": "–ù–∏–∞–≥–∞—Ä—Å–∫–∏–π –í–æ–¥–æ–ø–∞–¥ –°–®–ê –ö–∞–Ω–∞–¥–∞",
    "https://imgur.com/a/CgWWx5f": "–í–µ–ª–∏–∫–∏–π –ü—Ä–∏–∑–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ò—Å—Ç–æ—á–Ω–∏–∫ –ô–µ–ª–ª–æ—É—Å—Ç–æ–Ω—Å–∫–∏–π –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ü–∞—Ä–∫ –°–®–ê",
    "https://imgur.com/a/Zs3PBxF": "–ì–µ–π–∑–µ—Ä –§–ª–∞–π –ù–µ–≤–∞–¥–∞ –°–®–ê",
    "https://imgur.com/a/NOzyXnr": "–ú–æ—Å—Ç –ó–æ–ª–æ—Ç—ã–µ –í–æ—Ä–æ—Ç–∞ –°–∞–Ω-–§—Ä–∞–Ω—Ü–∏—Å–∫–æ –°–®–ê",
    "https://imgur.com/a/opZ1pHn": "–ì–æ—Ä–∞ –†–∞—à–º–æ—Ä –ú–µ–º–æ—Ä–∏–∞–ª –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞–º –°–®–ê",
    "https://imgur.com/a/lqGP4jy": "–ú–æ–Ω—É–º–µ–Ω—Ç –í–∞—à–∏–Ω–≥—Ç–æ–Ω–∞ –°–®–ê",
    "https://imgur.com/a/X4yuuzJ": "–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ü–∞—Ä–∫ –°–µ–∫–≤–æ–π—è –°–®–ê",
    "https://imgur.com/a/bLw5TfM": "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ü–∞—Ä–∫ –ù—å—é-–ô–æ—Ä–∫ –°–®–ê",
    "https://imgur.com/a/6UdMMHb": "–ü–µ—â–µ—Ä—ã –õ–µ–¥–Ω–∏–∫–∞ –ú–µ–Ω–¥–µ–Ω—Ö–æ–ª–ª–∞ –ê–ª—è—Å–∫–∞ –°–®–ê",
    "https://imgur.com/a/t83AlmH": "–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ü–∞—Ä–∫ –ë–∞–Ω—Ñ –ö–∞–Ω–∞–¥–∞",
    "https://imgur.com/a/YXXO4vv": "–ú–æ–Ω—Ä–µ–∞–ª—å—Å–∫–∏–π –ë–æ—Ç–∞–Ω–∏—á–µ—Å–∫–∏–π –°–∞–¥ –ö–∞–Ω–∞–¥–∞",
    "https://imgur.com/a/7R1RdM7": "–í–∏—Å—è—á–∏–π –ú–æ—Å—Ç –ö–∞–ø–∏–ª–∞–Ω–æ –í–∞–Ω–∫—É–≤–µ—Ä –ö–∞–Ω–∞–¥–∞",
    "https://imgur.com/a/bwFquZJ": "–°–∏ –≠–Ω –¢–∞—É—ç—Ä –¢–æ—Ä–æ–Ω—Ç–æ –ö–∞–Ω–∞–¥–∞",
    "https://imgur.com/a/axodcZk": "–ü—É—Å—Ç—ã–Ω—è –î–∞–Ω–∞–∫–∏–ª—å –≠—Ñ–∏–æ–ø–∏—è –ê—Ñ—Ä–∏–∫–∞",
    "https://imgur.com/a/u6PEBKN": "–ê–ª–ª–µ—è –ë–∞–æ–±–∞–±–æ–≤ –ú–∞–¥–∞–≥–∞—Å–∫–∞—Ä –ê—Ñ—Ä–∏–∫–∞",
    "https://imgur.com/a/afMWgVL": "–ö–∞–º–µ–Ω–Ω—ã–π –õ–µ—Å –ú–∞–¥–∞–≥–∞—Å–∫–∞—Ä –¶–∏–Ω–≥–∏-–¥–µ-–ë–µ–º–∞—Ä–∞—Ö–∞",
    "https://imgur.com/a/AZejamB": "–õ—É–∫—Å–æ—Ä –ï–≥–∏–ø–µ—Ç –ê—Ñ—Ä–∏–∫–∞",
    "https://imgur.com/a/SCTJy6t": "–ì–æ—Ä–∞ –ö–∏–ª–∏–º–∞–Ω–¥–∂–∞—Ä–æ –¢–∞–Ω–∑–∞–Ω–∏—è –ê—Ñ—Ä–∏–∫–∞",
    "https://imgur.com/a/tUYfN7Q": "–ì–æ—Ä–∞ –°—Ç–æ–ª–æ–≤–∞—è –Æ–ê–† –ê—Ñ—Ä–∏–∫–∞",
    "https://imgur.com/a/iVYL0M8": "–ö–æ–ª—ã–±–µ–ª—å –ß–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–∞ –Æ–ê–† –ê—Ñ—Ä–∏–∫–∞",
    "https://imgur.com/a/CgEhQrx": "–¢–æ–º–±—É–∫—Ç—É –ú–∞–ª–∏ –ê—Ñ—Ä–∏–∫–∞",
    "https://imgur.com/a/Es5EB4Y": "–í–æ–¥–æ–ø–∞–¥ –í–∏–∫—Ç–æ—Ä–∏—è –ó–∞–º–±–∏—è –ê—Ñ—Ä–∏–∫–∞",
    "https://imgur.com/a/Upbjw0I": "–ë–µ—Ä–µ–≥ –°–∫–µ–ª–µ—Ç–æ–≤ –ù–∞–º–∏–±–∏—è"
}




# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON-—Ñ–∞–π–ª–∞
def load_country_descriptions(file_path):
    with open(file_path, 'r', encoding='utf-8') as json_file:
        country_dict = json.load(json_file)

    return country_dict

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
def load_photo_dict(photo_dict):
    photo_data = {}
    for photo_url, answer in photo_dict.items():
        photo_data[photo_url] = answer

    return photo_data

# –í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è —Å—Ç—Ä–∞–Ω—ã
def get_random_country_description(country_dict):
    country = random.choice(list(country_dict.keys()))
    descriptions = country_dict[country]
    description = random.choice(descriptions)
    return country, description

# –í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –æ—Ç–≤–µ—Ç–∞
def get_random_photo(photo_data):
    photo_url = random.choice(list(photo_data.keys()))
    answer = photo_data[photo_url]
    return photo_url, answer

def check_photo(answer, expected_answer):
    for url, description in photo_dict.items():
        if answer == description:
            return True
    return False

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def check_answer(user_answer, answer):
    return user_answer.lower() == answer.lower()

# –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
def send_new_country_description(message):
    country, description = get_random_country_description(country_descriptions)
    formatted_description = f"<i>{description}</i>"
    bot.send_message(message.chat.id, f"<b>–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã:</b>\n{formatted_description}", parse_mode='HTML')
    user_data[message.chat.id] = (country, description)

# –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
def send_new_photo(message):
    photo_url, answer = get_random_photo(photo_data)
    bot.send_photo(message.chat.id, photo_url)
    user_data[message.chat.id] = (photo_url, answer)

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –±–æ—Ç–∞ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏–π –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
def reload_bot(message):
    global country_descriptions, photo_data
    country_descriptions = load_country_descriptions('descriptions.json')
    photo_data = load_photo_dict(photo_dict)
    send_new_country_description(message)

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON-—Ñ–∞–π–ª–∞
country_descriptions = load_country_descriptions('descriptions.json')

# –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
photo_data = load_photo_dict(photo_dict)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
bot = telebot.TeleBot('6116570275:AAEdNShJXJxaEVENGlollLzhMaNZf5fttfg')

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_data = {}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    bot.send_message(message.chat.id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /places, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è–º, –∏–ª–∏ /countries, —á—Ç–æ–±—ã –æ—Ç–≥–∞–¥—ã–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω—ã –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é.", parse_mode='HTML')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /countries
@bot.message_handler(commands=['countries'])
def handle_countries(message):
    send_new_country_description(message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /places
@bot.message_handler(commands=['places'])
def handle_places(message):
    send_new_photo(message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(func=lambda message: True)
def handle_user_answer(message):
    chat_id = message.chat.id
    if chat_id in user_data:
        user_answer = message.text
        if isinstance(user_data[chat_id], tuple):
            country, description = user_data[chat_id]
            if check_answer(user_answer, country):
                bot.send_message(chat_id, "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç! üéâ")
                del user_data[chat_id]
                descriptions = country_descriptions[country]
                descriptions.remove(description)
                if len(descriptions) == 0:
                    del country_descriptions[country]
                if not country_descriptions:
                    bot.send_message(chat_id, "–û–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /countries, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è.")
                else:
                    send_new_country_description(message)
            elif check_photo(user_answer, photo_dict):
                bot.send_message(chat_id, "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é! üéâ")
                photo_url, answer = user_data[chat_id]
                del user_data[chat_id]
                del photo_data[photo_url]
                if not photo_data:
                    bot.send_message(chat_id, "–í—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /places, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.")
                else:
                    send_new_photo(message)
            else:
                bot.send_message(chat_id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!")
        else:
            photo_url, answer = user_data[chat_id]
            if check_answer(user_answer, answer):
                bot.send_message(chat_id, "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç! üéâ")
                del user_data[chat_id]
                del photo_data[photo_url]
                if not photo_data:
                    bot.send_message(chat_id, "–í—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /places, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.")
                else:
                    send_new_photo(message)
            else:
                bot.send_message(chat_id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reload
@bot.message_handler(commands=['reload'])
def handle_reload(message):
    reload_bot(message)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
